---
import { setURL } from '../../../data/constants';
import BotonFlecha from '../../global/BotonFlecha.astro';
import DifferentialCard from '../DifferentialCard.astro';
interface Props{
    strapiData: any;
}
const{ strapiData } = Astro.props;

const ProsTitle = strapiData.pageData.data.pageAboutUs.data.attributes.ProsTitle;
const ProsBullets = strapiData.pageData.data.pageAboutUs.data.attributes.ProsBullets;
const GenParagraph = strapiData.pageData.data.pageAboutUs.data.attributes.GenParagraph;




---


<section id="ourdifferentials">
    <div class="main">

        <hr class="rounded">
        <h1 class="title">{ProsTitle}</h1>
        <h2 class="subtitle">Differentials</h2>
    </div>

    <div class="row-pic-text">
        {
            ProsBullets.map((item:any) => (
                <DifferentialCard title={item.Title} subtitle={item.Subtitle} content={item.Content} iconUrl={`${setURL(item.Icon.data.attributes.url)}`} iconAlt={item.Icon.data.attributes.alternativeText} />
            ))
        }
    </div>

    <img src="/image/ublanca.svg" alt="uwifi white">

    <div>
        <p class="unlock">{GenParagraph.Headings[0].Heading}</p>
        <p class="Mission">{GenParagraph.Headings[1].Heading}</p>
    </div>
    <BotonFlecha texto={GenParagraph.Buttons[0].Text} link={GenParagraph.Buttons[0].Link}  backgroundColor='#01c938' width='300px' iconColor='#01c938' fontweight='500'/>


    <span class="green-ball-blured"></span>
</section>


<style>
    .green-ball-blured{
    top: 10%;
	left: -10%;
	position: absolute;
    width: clamp(0px, 50vw, 700px);
	height: clamp(0px, 50vw, 700px);
	border-radius: 100%;
    background: linear-gradient(0deg, #057e41 0%, #025709 100%);
	filter: blur(100px);
    opacity: 0.5;
	z-index: -1;
	}
section
{
    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    box-sizing: border-box;
    padding-left: clamp(0px, 5vw, 100px);
    padding-right: clamp(0px, 5vw, 100px);
    padding-bottom: 100px;
    
    gap: clamp(20px, 5vw, 50px);
  
}
.main{
    display: flex;
    flex-direction: column;
    align-self:flex-start;
}
p.unlock
{
    font-size: clamp(16px, 3vw, 28px);
    font-weight: 300;
    color: var(--primary-text-color);
    text-align: center;
    opacity: 0.5;
    font-weight: 400;
}
p.Mission
{
    font-size: clamp(18px, 3vw, 30px);
    font-weight: 300;
    color: var(--primary-text-color);
    text-align: center;
}

img
{
    display: flex;
    flex-direction: row;
    
    
  
}
.row-pic-text
{
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: flex-start;
    width: 100%;
    gap: clamp(20px, 5vw, 50px);


}



hr.rounded {
border-top: 5px solid var(--cuaternary-color);
border-radius: 5px;
width: 100px;
margin-bottom: 10px;
}
h1.title
{
    font-size: clamp(10px, 10vw, 36px);
    font-weight: 500;
    color: var(--primary-text-color);
    text-align: left;
}
h2.subtitle
{
    font-size: clamp(20px, 5vw, 40px);
    font-weight: 800;
    color: var(--cuaternary-color);
    text-align: left;
}
.description 
{
   position: relative;
    color: var(--primary-text-color);
    font-weight: 300;
    text-wrap: pretty;
    font-size: clamp(12px, 3vw, 25px);
    
    width: 50%;
}
.description::before
{
    content: open-quote;
    font-size: clamp(12px, 10vw, 100px);
    color: var(--cuaternary-color);
    font-family: Catamaran;
    line-height: 1; 
    position: absolute;
    top: -10px;
    left: -40px;

  
    
}
.description::after
{
    content: close-quote;
    font-size: clamp(12px, 10vw, 100px);
    color: var(--cuaternary-color);
    font-family: Catamaran;
    line-height: 1;
    position: absolute;
    bottom: -60px;
    right: -20px;
}


@media (max-width: 900px) 
	{
     .row-pic-text{
        flex-direction: column;
        align-items: center;

     }
     .main
     {
         align-items: center;
         align-self: center;
         margin: 20px;
     
     }
	
	}
	
</style>