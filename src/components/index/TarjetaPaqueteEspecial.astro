---
import BotonFlecha from '../global/BotonFlecha.astro';
interface Props {
	title: string;
	Subtitle: string;
	Price: string;
	Pricetime: string;

	Buttons: {
		Text: string;
		Link: string;
	}[];
	Features?: {
		Content: string;
	}[];
}

const { Price, Buttons, title, Features=[""], Subtitle="FREE for ACP Subscribers", Pricetime="/month with" } = Astro.props;


---

<div class="contenedor-tarjeta overflow-hidden">
    <div class="overflow-hidden tarjeta bg-gradient-to-r from-white/20 to-white/5 md:mr-10 max-w-[350px] rounded-tl-[300px] rounded-tr-[300px] rounded-bl-[150px] py-5 my-5 border border-secondaryColor flex flex-col items-center justify-center">
			<div class="flex flex-row max-w-[250px] gap-2 items-center justify-center p-2">
				<p class="font-bold md:text-[70px] text-[40px]">${Price}</p>
				<p class="text-white font-light text-left text-[13px]"> {Pricetime}</p> 
			</div>
			<h3 class="shadow-2xl  bg-gradient-to-r from-secondaryColor text-white font-bold text-center text-[30px]">{Subtitle}</h3>
			<br>
       
			<ul class="flex flex-col gap-3">
				{
					Features.map((feature) => (
						<li class="flex flex-row gap-3 font-light">
							<span class=" w-[20px] h-[20px]">
								<img alt="icono check"  class="image bg-primaryColor rounded-full inline-block " src="/image/checkwhite.svg"/>
							</span>
							{typeof feature === 'string' ? feature : feature.Content}
						</li>
					))
				}
			</ul>
        <br>
		<!-- <a href={Buttons[2].Text} class="description font-bold link">{Buttons[2].Text}</a> -->
		<BotonFlecha link={Buttons[3].Link} texto={Buttons[3].Text} iconColor='white' borderColor='white'/>
		<!-- <a href={Buttons[3].Link} class="flex font-[16px] font-bold text-center w-full justify-center">{Buttons[3].Text}</a> -->
    </div>
</div>
