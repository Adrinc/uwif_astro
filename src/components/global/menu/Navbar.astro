---
import { setURL } from "../../../data/constants";
import BotonFlecha from "../BotonFlecha.astro";
import ButtonList from "../ButtonList.astro";
import Logo from "../animations/Rive/riveComponent.jsx";
import { getRelativeLocaleUrl } from 'astro:i18n';

interface Props {
    logo: any;
    options: any;
    featButton: any;
}

const { options, logo, featButton } = Astro.props;
const menuOpStyle="flex items-center transition ease-in-out delay-100 px-3 py-1 m-2 min-[1100px]:hover:scale-75  hover:text-gray-900 focus:text-gray-900 hover:bg-gray-200 focus:bg-gray-200 focus:outline-none focus:shadow-outline rounded-full font-semibold min-[1400px]:text-[1.1vw] text-[18px] tracking-[-0.5px]";
---


<!-- component -->
<script
    src="https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.x.x/dist/alpine.min.js"
    defer>
</script>

<script>
    const nav = document.querySelector(".navbar");
    const navLinks = nav && nav.querySelectorAll("a");
    const currentURL = window.location.href;
    navLinks && navLinks.forEach((link) => {
      if (link.href === currentURL) {
        link.classList.add("active");
      }
    });
  </script>

<nav class="navbar" id="top">
    <div class="antialiased">
        <div
            class="w-full text-white bg-black/30 backdrop-blur-[20px] border-y border-white/20 py-3"
        >
            <div
                x-data="{ open: false }"
                class="z-10 flex flex-col max-w-[1600px] px-4 mx-auto min-[1100px]:items-center min-[1100px]:justify-between min-[1100px]:flex-row min-[1100px]:px-6 lg:px-8"
            >
                <div
                    class="flex flex-row items-center justify-between"
                >

                    <!-- LOGO -->
                    
                    <a href={getRelativeLocaleUrl(Astro.currentLocale==undefined?'en':Astro.currentLocale, logo.Link)}
                        class="w-[120px] h-[50px]"
                        href={logo.Link}>
                        <Logo src={setURL(logo.Icon.data.attributes.url)}, stateMachines={logo.Text} autoplay={true} transition:persist client:only/>    
                    </a>
                    

                    <button
                        class="rounded-lg min-[1100px]:hidden focus:outline-none focus:shadow-outline"
                        @click="open = !open"
                    >
                        <svg
                            fill="currentColor"
                            viewBox="0 0 20 20"
                            class="w-6 h-6"
                        >
                            <path
                                x-show="!open"
                                fill-rule="evenodd"
                                d="M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM9 15a1 1 0 011-1h6a1 1 0 110 2h-6a1 1 0 01-1-1z"
                                clip-rule="evenodd"></path>
                            <path
                                x-show="open"
                                fill-rule="evenodd"
                                d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
                                clip-rule="evenodd"></path>
                        </svg>
                    </button>
                </div>

                <!-- NAV BAR -->
                <nav
                    :class="{'flex': open, 'hidden': !open}"
                    class="w-full flex-col hidden pb-4 min-[1100px]:pb-0 min-[1100px]:flex min-[1100px]:justify-evenly min-[1100px]:flex-row text-white"
                >
                    <div
                        class="flex min-[1100px]:flex-row flex-col shrink-0 min-[1100px]:bg-white/5 min-[1100px]:rounded-full min-[1100px]:border min-[1100px]:border-white/10 text-white"
                    >

                    {options.map((button: any, index: number) => (
                        button.SubOptions.length === 0 ? 
                            <a
                                class={`${menuOpStyle} menuOption`}
                                href={getRelativeLocaleUrl(Astro.currentLocale==undefined?'en':Astro.currentLocale, button.Link)}>
                                {button.Text}
                            </a>
                            :
                            <div
                                @click.away="open = false"
                                class="relative"
                                x-data="{ open: false }"
                            >
                                <button
                                    @click="open = !open"
                                    class={`${menuOpStyle} gap-1`}
                                >
                                    <span>{button.Text}</span>
                                    <svg
                                        fill="currentColor"
                                        viewBox="0 0 20 20"
                                        :class="{'rotate-180': open, 'rotate-0': !open}"
                                        class="inline w-4 h-4 mt-1 transition-transform duration-200 transform md:-mt-0"
                                    >
                                        <path
                                            fill-rule="evenodd"
                                            d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
                                            clip-rule="evenodd">
                                        </path>
                                    </svg>
                                </button>
                            <div
                                x-show="open"
                                x-transition:enter="transition ease-out duration-100"
                                x-transition:enter-start="transform opacity-0 scale-95"
                                x-transition:enter-end="transform opacity-100 scale-100"
                                x-transition:leave="transition ease-in duration-75"
                                x-transition:leave-start="transform opacity-100 scale-100"
                                x-transition:leave-end="transform opacity-0 scale-95"
                                class="absolute right-0 w-full min-[1100px]:max-w-[180px] min-[1100px]:w-screen mt-2 origin-top-right z-20"
                            >
                                <div
                                    class="bg-white rounded-md shadow-lg dark-mode:bg-gray-700 divide-y"
                                >
                                {button.SubOptions.map((suboption: any, index: number) => (
                                    <a
                                class={`${menuOpStyle} text-black min-[1100px]:text-[15px] menuOption`}
                                href={getRelativeLocaleUrl(Astro.currentLocale==undefined?'en':Astro.currentLocale, suboption.Link)}>{suboption.Text}</a>
                                ))}
                                
                                </div>
                            </div>
                        </div>
                        ))
                    }

                    <ButtonList buttons={featButton} hasIcon={false} fillAll={true}/>
                    </div>

                </nav>

                <div id="switch-lang" class="relative flex cursor-pointer items-center justify-center self-center rounded-full shadow-sm border border-white/50 p-2 gap-2 ml-5">
                    <div class=`h-[40px] w-[40px] rounded-full flex items-center justify-center text-center p-2 bg-contain bg-[url('https://u-strapi.virtalus.cbluna-dev.com/uploads/lang_en_82e2f780a3.webp')] ${Astro.currentLocale =="es"?"opacity-30":"opacity-100 border border-white border-2"}`></div>
                    <div class=`h-[40px] w-[40px] rounded-full flex items-center justify-center text-center p-2 bg-contain bg-[url('https://u-strapi.virtalus.cbluna-dev.com/uploads/lang_es_ef5d96edf7.webp')] ${Astro.currentLocale =="en"?"opacity-30":"opacity-100 border border-white border-2"}`></div>
                </div>


                <div
                    :class="{'flex': open, 'hidden': !open}"
                    class="min-[1100px]:block hidden max-w-[300px] shrink-0"
                >

                <!-- <div class="flex min-[1150px]:flex-row flex-col gap-5">
                  
                        <ButtonList
                          buttons={featButton}
                        />
                  
                </div> -->
                   
                </div>
               
            </div>
        </div>
    </div>
</nav>

<script>
    const switchLang = document.getElementById('switch-lang');

    switchLang?.addEventListener('click', ()=>{
        console.log("click")
        console.log(window.location.pathname);
        let newPath
        window.location.pathname.includes('/es/')
        ?newPath = "/"+window.location.pathname.split('/es/')[1]
        :newPath="/es"+window.location.pathname;

        window.location.href=newPath;
    })
</script>

<style>
    .navbar a.menuOption.active {
        border: solid white;
    }
</style>