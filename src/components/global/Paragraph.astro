---
import Markdown from './Markdown.astro';
import { setURL } from '../../data/constants';
import ButtonList from './ButtonList.astro';

interface Props {
	headings?: any;
    centerHeadings?:boolean;
    logo?: any;
    logoIsInline?: boolean;
    textBlock: string;
    buttons?: any;
    backgroundColor?: string;
    centerContent?: boolean;
    textAtLeft? : boolean;
    removeVerMargin?: boolean;
}


const {headings, logo, logoIsInline= true, textBlock, buttons, backgroundColor="transparent", centerHeadings=true, centerContent=false, textAtLeft=true, removeVerMargin=false} = Astro.props;

---
<div class={`w-full flex place-content-center ${removeVerMargin ? "": "my-20"} bg-${backgroundColor}`}>
    <div class={`flex ${centerContent ? "md:flex-col" : textAtLeft ? "md:flex-row" : "md:flex-row-reverse"} flex flex-col items-center md:max-w-[1300px] md:mx-[5vw] px-5`}>

        <!-- DIV PARA TEXTO -->
        <div class={`${centerContent ? "" : "md:w-full"} flex flex-col gap-5`}>
        
            <!-- Sección de títulos -->
            <div class={`${centerContent ? "" : "md:justify-start"} flex flex-wrap  gap-x-4 items-center justify-center leading-none`}>
                {headings && headings.map((heading: any, index: number) => (
                    <div                             data-twe-animation-init data-twe-animation-reset="true" data-twe-animation-start="onHover" data-twe-animation="[fade-in-down_1s_ease-in-out]"
 class={`flex ${logoIsInline ? "gap-x-4": "flex-col "} items-center`}>
                        <Markdown textAlign={`${centerHeadings ? "": "md:text-left" } text-center`} content={heading.Heading.toString()}/>
                        {logo &&
                            index + 1 === headings.length  &&
                            <img
                                src={setURL(logo.data.attributes.url)}
                                class="h-[60px]"
                                alt={logo.data.attributes.alternativeText}
                            />
                        }
                    </div>
                ))}
            </div>
            
            <Markdown content={textBlock} classN="md:text-[1.5vw] md:pr-20 " textAlign={`${centerContent ? "text-center" : "md:text-justify text-center"}`}/>

            {buttons && 
            <div class={`flex md:justify-start justify-center ${centerContent ? "md:justify-center" : ""}`}>
                <ButtonList buttons={buttons} />
            </div>
            }
            
        
        </div>
        

         <div class=" flex flex-grow justify-center place-items-center">
            <slot/>
        </div>

       
    </div>
</div>


