---
interface Props {
	texto?: string;
	link: string;
	backgroundColor?: string;
	borderColor?: string;
	borderColorHover?:string;
	borderWidth?: number;
	textColor?: string;
	textColorHover?: string;
	iconColor?: string;
	iconBackgroundColor?:string;
	iconColorHover?: string;
	width?: string;
	fontweight?: string;
	showIcon?: boolean;
}

const {showIcon=true,  texto="", link, backgroundColor="transparent", iconColor='fill-primaryColor', iconColorHover='fill-primaryColor', iconBackgroundColor="bg-white", borderColor = "red-500", borderColorHover ='transparent',  borderWidth=2, textColor='#ffffff', textColorHover='#ffffff'  } = Astro.props;
---
<a href={link} target={`${link.includes('://') ? '_blank' : ''}`}>
    <button  class={` ${showIcon ? "p-2" : "px-6 py-2"} button-learn bg-${backgroundColor} text-${textColor} border-[1.5px] ${borderColor} flex flex-row items-center justify-center min-[1400px]:text-[1vw] text-[18px] font-semibold tracking-[-.03em] gap-3 shrink-0 rounded-full`} aria-label={texto}
	>
	{texto}
	<div  class={`${backgroundColor !="transparent" ? "bg-white" : iconBackgroundColor} ${showIcon ? "block" : "hidden"} rounded-full p-1 `}>
		<svg xmlns="http://www.w3.org/2000/svg" height="22" viewBox="0 -960 960 960" class={`${iconColor} h-[22px] w-[22px]]`} width="22"><path d="M632.652-592.346 298.696-258.391q-15.522 15.522-37.044 15.24-21.522-.283-37.043-15.805-15.522-15.522-15.522-37.327 0-21.804 15.522-37.326l333.39-333.39H285.652q-22.087 0-37.543-15.457-15.457-15.457-15.457-37.544 0-22.087 15.457-37.544 15.456-15.457 37.543-15.457h400q22.088 0 37.544 15.457 15.457 15.457 15.457 37.544v400q0 22.087-15.457 37.544-15.456 15.457-37.544 15.457-22.087 0-37.543-15.457-15.457-15.457-15.457-37.544v-272.346Z"/></svg>
	</div>

	
</button>
</a>


<style>
.button-learn:hover {
background-color: transparent;
border-color: var(--border-color-hover);
transition: all 0.5s ease;
}

.image {
width: clamp(0.5rem, 1vw, 85px);
height: clamp(0.5rem, 1vw, 85px);
}

</style>