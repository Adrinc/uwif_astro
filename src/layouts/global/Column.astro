---
/* FLUTTER LIKE COLUMN */
interface Props {
    key?: string;
    mainAxisAlignment?: 'flex-start' | 'flex-end' | 'center' | 'space-between' | 'space-around' | 'space-evenly';
    crossAxisAligment?: 'flex-start' | 'flex-end' | 'center' | 'stretch' | 'baseline' | 'initial' | 'inherit';
    mainAxisSize?: 'min-content' | 'max-content' | 'fit-content' | 'fill' | 'inherit' | 'initial' | 'unset';
    warp?: 'nowrap' | 'wrap' | 'wrap-reverse';
    textDirection?: 'left' | 'right' | 'center' | 'end' | 'justify';
    reverse?: boolean;
}
// Row.astro


let { 
    mainAxisAlignment = 'flex-start', 
    crossAxisAligment='flex-start', 
    mainAxisSize='max-content', 
    warp='nowrap', 
    textDirection='left', 
    reverse=false, 
    key }: Props = Astro.props;
---

<div id={key} class=`flex ${reverse==true ? "flex-col-reverse" : "flex-col"}` style={`justify-content: ${mainAxisAlignment};  align-items: ${crossAxisAligment}; flex-wrap: ${warp};`}>
    <slot />
</div>

