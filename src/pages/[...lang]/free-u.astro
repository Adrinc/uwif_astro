---
import Layout from '../../layouts/Layout.astro';
import {getPageData} from '../../services/graphql';
import { getLangFromUrl, setURL } from '../../data/constants';
import Carousel from '../../components/global/Carousel.astro';
import { freeUQuery } from '../../data/queries/freeUQuery';
import Markdown from '../../components/global/Markdown.astro';
import BlurryBall from '../../components/global/BlurryBall.astro';
import DividerTitle from '../../components/global/DividerTitle.astro';
import Paragraph from '../../components/global/Paragraph.astro';


const lang = getLangFromUrl(Astro.url)

const data = await getPageData(freeUQuery(lang), lang);
const pageData = data.pageData['data']['pageFreeU']['data']['attributes'];

const sectionIntro = pageData.Introduction;
const sectionSteps = pageData.Steps;
const paragraphs = pageData.Paragraphs;
const videoData = pageData.Video.data.attributes;

const layoutData = data.layoutData;
const seoData = pageData['SEO'];

---

<Layout seoData={seoData} dataLayout={layoutData}>
	<div class="my-20  flex flex-col items-center justify-center w-full relative">
		<BlurryBall position="top-[-200px] end-[350px]" background='secondaryColor' size="400px"/>

		<div class="md:max-w-[50vw] max-w-full text-center px-10">

		{sectionIntro.Headings.map((item:any) => (
					<Markdown content={item.Heading} textAlign='text-center' classN='leading-none' />
		))}
		
		<Markdown content={sectionIntro.Textblock} textAlign='text-center' classN="my-5"/>
		<Carousel slides={pageData.Carousel.data} type='simple' swiperId='freeUScreens'/>
	</div>

	<div class="md:mt-[10px] mt-[50px] w-full  ">        
		<div class="w-full relative flex items-end justify-center">
			{
				<DividerTitle
					gradientId={`gradient-free-u`}
					startColor={'transparent'}
					endColor={'transparent'}
					addBorder
				/>
			}
			<div class="absolute w-full h-full flex flex-wrap items-end md:mb-6 mb-5 justify-center gap-20">
				
				{sectionSteps.map((item:any) => (
					<div class="flex flex-col items-center justify-end max-w-[150px] flex-grow-0 flex-shrink-0 gap-4">
							<img
                                class="object-contain h-[60px] w-[60px]"
                                src={`${setURL(item["Icon"]["data"]["attributes"]["url"])}`}
                            />						
					<Markdown content={item.Title} textAlign='text-center' classN='leading-none !text-[18px]' />
					
					</div>
		))}
			</div>
		</div>
	</div>

	<!-- Paragraphs -->
	<div>
		{paragraphs.map((par:any) => (
			<Paragraph textBlock={par.Textblock} centerContent={true}/>
		))}
	</div>

	<div class=" p-8">
		<video
			controls
			class="md:max-w-screen-lg object-cover rounded-[30px] overflow-hidden"
			src={setURL(videoData.url)} autoplay muted loop playsinline/>
	</div>

	</div>
</Layout>