---

import {getPageData} from '../../services/graphql';
import * as PartnersData from '../../data/queries/PartnersQuery';
import BlurryBall from '../../components/global/BlurryBall.astro';
import Paragraph from '../../components/global/Paragraph.astro';
import DividerTitle from '../../components/global/DividerTitle.astro';
import BubbleImgButton from '../../components/global/BubbleImgButton.astro';
import Layout from '../../layouts/Layout.astro';

const data = await getPageData(PartnersData.partnersQuery());

const partnerPageData = data['pageData']['data']['pagePartner']['data']['attributes'];
const paragraphData = partnerPageData.HeaderParagraph;
const partnersData = data['pageData']['data']['partnerCategories']['data'];

const dataLayout = data.layoutData;
const seoData = partnerPageData.SEO;

const currentPath = Astro.url.pathname;
---

<Layout seoData={seoData} dataLayout={dataLayout}>
    <div class=" py-[80px] relative">
        <BlurryBall position="top-[200px] start-[150px]" size="350px" blur='200px'/>
	    <Paragraph headings={paragraphData.Headings} textBlock={paragraphData.Textblock} centerContent={true} removeVerMargin={true}/>
        
        
        {partnersData.map((category: any, index: any) => (            
            <div class="md:mt-[10px] mt-[50px]">
            
                <div class="w-full relative flex items-end justify-center">
                    {
                        <DividerTitle
                            gradientId={`gradient-partners-${index}`}
                            startColor={index%2 ? '#63CD6B':undefined}
                            endColor={index%2 ? '#16922A' : undefined}/>
                    }
                    <h2 class="absolute text-[17px] md:text-[3vw] md:pb-[3vw] pb-[2vw] font-extralight">{category.attributes.Name}</h2>
                    {/* <Markdown content={category.attributes.Name} classN='absolute [&>h2]:text-[17px] md:[&>h2]:text-[3vw] md:pb-[3vw] pb-[2vw]'/> */}
                </div>
                
                <div class="flex flex-wrap items-center justify-center gap-10 mt-[40px] md:mb-[0px] mb-[40px]">
                    {category.attributes.partners.data.map((partner: any, index: number) => (
                        <BubbleImgButton img={partner.attributes.Logo.data} link={currentPath+'/'+partner.attributes.Slug} text={partner.attributes.Name}/>
                    ))}
                </div>
            </div>))
        }
</div>
</Layout>